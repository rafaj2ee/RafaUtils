/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class inas_smart_SmartDriver */

#ifndef _Included_inas_smart_SmartDriver
#define _Included_inas_smart_SmartDriver
#ifdef __cplusplus
extern "C" {
#endif
#undef inas_smart_SmartDriver_SMART_PRINTER_TYPE_USB
#define inas_smart_SmartDriver_SMART_PRINTER_TYPE_USB 1L
#undef inas_smart_SmartDriver_SMART_PRINTER_TYPE_NET
#define inas_smart_SmartDriver_SMART_PRINTER_TYPE_NET 2L
#undef inas_smart_SmartDriver_SMART_PRINTER_TYPE_ALL
#define inas_smart_SmartDriver_SMART_PRINTER_TYPE_ALL 3L
#undef inas_smart_SmartDriver_SMART_OPENDEVICE_BYID
#define inas_smart_SmartDriver_SMART_OPENDEVICE_BYID 0L
#undef inas_smart_SmartDriver_SMART_OPENDEVICE_BYDESC
#define inas_smart_SmartDriver_SMART_OPENDEVICE_BYDESC 1L
/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_GetDeviceList2
 * Signature: (I[C[C[C[C[I)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1GetDeviceList2
  (JNIEnv *, jobject, jint, jcharArray, jcharArray, jcharArray, jcharArray, jintArray);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_OpenDevice2
 * Signature: ([I[CI)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1OpenDevice2
  (JNIEnv *, jobject, jintArray, jcharArray, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartDCL_OpenDevice2
 * Signature: ([I[CII)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartDCL_1OpenDevice2
  (JNIEnv *, jobject, jintArray, jcharArray, jint, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_CloseDevice
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1CloseDevice
  (JNIEnv *, jobject, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartDCL_CloseDevice
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartDCL_1CloseDevice
  (JNIEnv *, jobject, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_GetStatus
 * Signature: (I[J)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1GetStatus
  (JNIEnv *, jobject, jint, jlongArray);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_GetRibbonType
 * Signature: (I[I)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1GetRibbonType
  (JNIEnv *, jobject, jint, jintArray);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_GetRibbonRemain
 * Signature: (I[I)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1GetRibbonRemain
  (JNIEnv *, jobject, jint, jintArray);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_ClearStatus
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1ClearStatus
  (JNIEnv *, jobject, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_SBSStart
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1SBSStart
  (JNIEnv *, jobject, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_SBSEnd
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1SBSEnd
  (JNIEnv *, jobject, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_CardOut
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1CardOut
  (JNIEnv *, jobject, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_Move
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1Move
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_ICHContact
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1ICHContact
  (JNIEnv *, jobject, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_ICHDiscontact
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1ICHDiscontact
  (JNIEnv *, jobject, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_MagReadAction
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1MagReadAction
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_MagGetBuffer
 * Signature: (II[C[I)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1MagGetBuffer
  (JNIEnv *, jobject, jint, jint, jcharArray, jintArray);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_MagGetAllBuffer
 * Signature: (IZ[C[IZ[C[IZ[C[I)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1MagGetAllBuffer
  (JNIEnv *, jobject, jint, jboolean, jcharArray, jintArray, jboolean, jcharArray, jintArray, jboolean, jcharArray, jintArray);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_MagWriteAction
 * Signature: (IIZ)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1MagWriteAction
  (JNIEnv *, jobject, jint, jint, jboolean);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_MagBitModeGetBPI
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1MagBitModeGetBPI
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_MagBitModeGetMaxSize
 * Signature: (I[I)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1MagBitModeGetMaxSize
  (JNIEnv *, jobject, jint, jintArray);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_MagSetBuffer
 * Signature: (II[BI)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1MagSetBuffer
  (JNIEnv *, jobject, jint, jint, jbyteArray, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_MagGetCryptoBuffer
 * Signature: (II[B[I[C)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1MagGetCryptoBuffer
  (JNIEnv *, jobject, jint, jint, jbyteArray, jintArray, jcharArray);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_MagGetAllCryptoBuffer
 * Signature: (IZ[C[IZ[C[IZ[C[I[C)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1MagGetAllCryptoBuffer
  (JNIEnv *, jobject, jint, jboolean, jcharArray, jintArray, jboolean, jcharArray, jintArray, jboolean, jcharArray, jintArray, jcharArray);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_MagSetCryptoBuffer
 * Signature: (II[BI[C)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1MagSetCryptoBuffer
  (JNIEnv *, jobject, jint, jint, jbyteArray, jint, jcharArray);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_MagSetAllCryptoBuffer
 * Signature: (IZ[CIZ[CIZ[CI[C)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1MagSetAllCryptoBuffer
  (JNIEnv *, jobject, jint, jboolean, jcharArray, jint, jboolean, jcharArray, jint, jboolean, jcharArray, jint, jcharArray);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_OpenDocument
 * Signature: (I[C)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1OpenDocument
  (JNIEnv *, jobject, jint, jcharArray);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_CloseDocument
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1CloseDocument
  (JNIEnv *, jobject, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_GetPrinterSettings
 * Signature: (ILinas/smart/CHASM_DEVMODE;)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1GetPrinterSettings
  (JNIEnv *, jobject, jint, jobject);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_SetPrinterSettings
 * Signature: (ILinas/smart/CHASM_DEVMODE;)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1SetPrinterSettings
  (JNIEnv *, jobject, jint, jobject);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_DrawImage
 * Signature: (IBBIIII[CLinas/smart/RECT;)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1DrawImage
  (JNIEnv *, jobject, jint, jbyte, jbyte, jint, jint, jint, jint, jcharArray, jobject);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartCommEx_DrawImage
 * Signature: (IBBIIIIIB[CLinas/smart/RECT;)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartCommEx_1DrawImage
  (JNIEnv *, jobject, jint, jbyte, jbyte, jint, jint, jint, jint, jint, jbyte, jcharArray, jobject);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_DrawRect
 * Signature: (IBBIIIIILinas/smart/RECT;)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1DrawRect
  (JNIEnv *, jobject, jint, jbyte, jbyte, jint, jint, jint, jint, jint, jobject);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_Print
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1Print
  (JNIEnv *, jobject, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartDCL_Print
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartDCL_1Print
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_DoPrint
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1DoPrint
  (JNIEnv *, jobject, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_IsBackEnable
 * Signature: (I[Z)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1IsBackEnable
  (JNIEnv *, jobject, jint, jbooleanArray);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_ICPowerOn
 * Signature: (II[J[B)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1ICPowerOn
  (JNIEnv *, jobject, jint, jint, jlongArray, jbyteArray);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_ICPowerOff
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1ICPowerOff
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_ICInput
 * Signature: (IIJ[B[J[B)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1ICInput
  (JNIEnv *, jobject, jint, jint, jlong, jbyteArray, jlongArray, jbyteArray);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_ICOutput
 * Signature: (IIJ[B[J[B)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1ICOutput
  (JNIEnv *, jobject, jint, jint, jlong, jbyteArray, jlongArray, jbyteArray);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_GetDeviceInfo2
 * Signature: ([CI[C[C[C[I[I[C[C[I[C[C[I[I[I[C[C[C[C)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1GetDeviceInfo2
  (JNIEnv *, jobject, jcharArray, jint, jcharArray, jcharArray, jcharArray, jintArray, jintArray, jcharArray, jcharArray, jintArray, jcharArray, jcharArray, jintArray, jintArray, jintArray, jcharArray, jcharArray, jcharArray, jcharArray);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_CardIn
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1CardIn
  (JNIEnv *, jobject, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_MagSetAllBuffer
 * Signature: (IZ[CIZ[CIZ[CI)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1MagSetAllBuffer
  (JNIEnv *, jobject, jint, jboolean, jcharArray, jint, jboolean, jcharArray, jint, jboolean, jcharArray, jint);

/*
 * Class:     inas_smart_SmartDriver
 * Method:    SmartComm_DrawText
 * Signature: (IBBII[CIB[CLinas/smart/RECT;)I
 */
JNIEXPORT jint JNICALL Java_inas_smart_SmartDriver_SmartComm_1DrawText
  (JNIEnv *, jobject, jint, jbyte, jbyte, jint, jint, jcharArray, jint, jbyte, jcharArray, jobject);

#ifdef __cplusplus
}
#endif
#endif
